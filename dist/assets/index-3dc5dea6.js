(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerPolicy&&(r.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?r.credentials="include":o.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=n(o);fetch(o.href,r)}})();const I=(e,t=()=>{})=>{e&&(e.classList.add("animate-opacity"),setTimeout(()=>{e.classList.remove("animate-opacity"),t()},300))},d=document.getElementById("dateForm"),g=document.getElementById("day"),p=document.getElementById("month"),h=document.getElementById("year"),w=document.getElementsByClassName("result"),b=document.getElementById("resultDay"),S=document.getElementById("resultMonth"),L=document.getElementById("resultYear");function c(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function u(e){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?u=function(n){return typeof n}:u=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},u(e)}function i(e){c(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||u(e)==="object"&&t==="[object Date]"?new Date(e.getTime()):typeof e=="number"||t==="[object Number]"?new Date(e):((typeof e=="string"||t==="[object String]")&&typeof console<"u"&&(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn(new Error().stack)),new Date(NaN))}function m(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}function y(e){c(1,arguments);var t=i(e);return t.setHours(0,0,0,0),t}var F=864e5;function M(e,t){c(2,arguments);var n=y(e),s=y(t),o=n.getTime()-m(n),r=s.getTime()-m(s);return Math.round((o-r)/F)}function O(e,t){c(2,arguments);var n=i(e),s=i(t),o=n.getFullYear()-s.getFullYear(),r=n.getMonth()-s.getMonth();return o*12+r}function Y(e,t){c(2,arguments);var n=i(e),s=i(t);return n.getFullYear()-s.getFullYear()}function N(e,t,n){const s=new Date;let o=Y(s,new Date(e,t-1,n)),r=O(s,new Date(s.getFullYear(),t-1,n)),a=M(s,new Date(s.getFullYear(),s.getMonth(),n));return a<0&&(r--,a=30+a),r<0&&(o--,r=12+r),{years:o,months:r,days:a}}function T(){C()}function C(){d.addEventListener("submit",B(({day:e,month:t,year:n})=>{const{years:s,months:o,days:r}=N(n,t,e);A(s,o,r)})),[g,p,h].forEach(e=>{e.addEventListener("keydown",t=>{t.key==="Enter"&&d.dispatchEvent(new Event("submit"))})})}const B=e=>function(t){t.preventDefault();try{const n=new FormData(t.target),s=l(n.get("day")),o=l(n.get("month")),r=l(n.get("year"));if(R(s,o,r),s===void 0||o===void 0||r===void 0)throw new Error("Empty fields");x(s,o,r),e({day:s,month:o,year:r})}catch{}},R=(e,t,n)=>![[e,"day"],[t,"month"],[n,"year"]].some(([o,r])=>{v(r),o===void 0&&f(r,"this field is required")}),f=(e,t)=>{const n=document.querySelector(`.text-error.${e}`);n&&(n.textContent=t,n.classList.remove("hide"))},v=e=>{const t=document.querySelector(`.text-error.${e}`);t&&(t.classList.add("hide"),t.textContent="")},x=(e,t,n)=>{const s=new Date(n,t-1,e);if(s>new Date)throw[g,p,h].forEach(a=>{f(a.id,"Invalid date")}),new Error("Invalid date");if([["day",e,s.getDate()],["month",t,s.getMonth()+1],["year",n,s.getFullYear()]].some(([a,E,D])=>(v(a),E!==D?(f(a,"Invalid value"),!0):!1)))throw new Error("Invalid date")},l=e=>{if(typeof e=="number")return e;if(typeof e=="string"){const t=parseInt(e,10);if(!Number.isNaN(t))return t}};function A(e,t,n){I(w.item(0),()=>{[{value:e,element:L},{value:t,element:S},{value:n,element:b}].forEach(({value:s,element:o})=>{const r=Array.from(o.childNodes).find(a=>a instanceof HTMLSpanElement&&a.classList.contains("value"));r&&(r.textContent=s.toString())})})}T();
